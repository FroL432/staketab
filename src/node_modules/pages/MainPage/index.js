import React, { useState, useEffect, useRef } from 'react'
import './MainPage.sass'
import { connect } from 'react-redux'
import { showPopUp } from 'store/MainPage/actions'

import PageNavBar from 'component/pageComponents/MainPage/PageNavBar'
import PageFirstScreen from 'component/pageComponents/MainPage/PageFirstScreen'
import AdvantagesBlock from 'component/pageComponents/MainPage/AdvantagesBlock'
import ShowcaseBlock from 'component/pageComponents/MainPage/ShowcaseBlock'
import FaqBlock from 'component/pageComponents/MainPage/FaqBlock'
import CompanyBlock from 'component/pageComponents/MainPage/CompanyBlock'
import PageFooter from 'component/pageComponents/MainPage/PageFooter'
import ScrollTopBtn from 'component/ScrollTopBtn'
import ValidatorsPopUp from 'component/ValidatorsPopUp'
import { ReactComponent as LogoIcon } from "assets/img/staketabLogo.svg";
import {useLocation} from "react-router";

function MainPage(props) {

  const advantagesRef = useRef()
  const faqRef = useRef()
  const companyRef = useRef()
  const validatorsRef = useRef()
  const topRef = useRef()

  const footerConfig = {
    logo: <LogoIcon />,
    copyright: `Â©${new Date().getFullYear()} - Staketab.com`,
    columns: [
      {
        title: "firstColumn",
        links: [
          {
            title: "Staking",
            link: "https://docs.staketab.com/how-to-stake/bitcanna",
          },
          {
            title: "FAQ",
            link: "#FAQ",
            ref: faqRef
          },
          {
            title: "Academy",
            link: "https://docs.staketab.com/academy/mina",
          },
          {
            title: "Explorer",
            link: "https://mina.staketab.com/",
          },
        ],
      },
      {
        title: "secondColumn",
        links: [
          {
            title: "Services",
            link: "https://services.staketab.com/",
          },
          {
            title: "About",
            link: "#company",
            ref: companyRef
          },
          {
            title: "Partnership",
            link: "/partnership",
          },
        ],
      },
    ],
  };

  const [topBtnShowed, setTopBtnShowed] = useState(false)
  const [isNavbarFixed, setIsNavbarFixed] = useState(false)

  useEffect(() => {
    function scrollhandler () {
      window.pageYOffset >= advantagesRef.current?.offsetTop ? setTopBtnShowed(true) : setTopBtnShowed(false)
      window.pageYOffset >= advantagesRef.current?.offsetTop ? setIsNavbarFixed(true) : setIsNavbarFixed(false)
    }
    window.addEventListener('scroll', scrollhandler)
    return () => {
      window.removeEventListener('scroll', scrollhandler)
    }
  }, [])

  const location = useLocation()
  useEffect(()=> {
    if (location.hash) {
      let elem = document.getElementById(location.hash.slice(1))
      if (elem) {
        elem.scrollIntoView({behavior: "smooth"})
      }
    } else {
      window.scrollTo({top:0,left:0, behavior: "smooth"})
    }
  },[location.pathname])
  return (
    <>
      {props.isPopupShowed ? 
        <ValidatorsPopUp />
      :null}
      <PageNavBar refs={{faqRef, companyRef, validatorsRef, topRef}} fixed={isNavbarFixed}/>
      <PageFirstScreen refs={{faqRef, companyRef, validatorsRef, topRef}} />
      <div className="mainPage__advantages" ref={advantagesRef}>
        <AdvantagesBlock />
      </div>
      <div className="mainPage__showcase">
        <ShowcaseBlock validatorsRef={validatorsRef} />
      </div>
      <div className="mainPage__faq">
        <FaqBlock faqRef={faqRef} />
      </div>
      <div className="mainPage__company">
        <CompanyBlock companyRef={companyRef} />
      </div>
      <PageFooter refs={{faqRef, companyRef, topRef}} links={footerConfig} />
      {topBtnShowed ? <ScrollTopBtn forwardRef={topRef} /> : null}
    </>
  )
}

const mapStateToProps = (state) => {
  return {
    isPopupShowed: state.reducerMainPage.isPopupShowed
  }
}

const mapDispatchToProps = {
  showPopUp
}

export default connect(mapStateToProps, mapDispatchToProps)(MainPage)