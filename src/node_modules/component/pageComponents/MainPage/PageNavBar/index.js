import React, {useEffect} from 'react'
import { NavLink } from 'react-router-dom'
import logoImg from 'assets/img/staketabLogo.svg' 
import BurgerNavMenu from 'component/BurgerNavMenu'
import './PageNavBar.sass'
import { useState } from 'react'
import {ReactComponent as Logo} from 'assets/img/Subtract.svg'
import {ReactComponent as Arrow} from 'assets/img/arrowDown.svg'
export default function PageNavBar(props) {

  const links = [
    {
      text: 'Services',
      href: '#',
    },
    {
      text: 'Projects',
      href: '#',
    },
    {
      text: 'About  Era',
      href: '#',
    },
    {
      text: 'Contact us',
      href: '#',
    },

    // {
    //   children:
    //   [
    //     {
    //       text: 'About',
    //       to: '#company',
    //       ref: props.refs.companyRef,
    //       logo:  null
    //     },
    //     {
    //       text: 'PartnerShip',
    //       href: '/partnership',
    //       logo:  <Logo/>
    //     }
    //   ],text:"Contact us"
    // },
  ]

  const [active, setActive] = useState('')
  const [opened, setOpened] = useState(false)
  const [adaptive, setAdaptive] = useState(window.innerWidth <= 650)
  const toggleOpened = (e, ref) => {
    setOpened(!opened)
  }

  const clickHandler = (e, ref) => {
    e.preventDefault()
    window.scrollTo({top: ref.current.offsetTop, behavior: 'smooth'})
    setActive(e.target.innerHTML)
  }

  window.addEventListener('resize',function(){
    window.innerWidth <= 680 ? setAdaptive(true): setAdaptive(false)
  });

  return (
      <nav className={`navbar${props.fixed ? ' navbar_fixed' : ''}`}>
        <div className={`container`} style={opened ? {padding: '0px'} : null}>
          <div className="navbar__wrapper" style={opened ? {padding: '0px'} : null}>
            <img src={logoImg} alt="Staketab" className={`navbar${opened ? `__IconDelete` : `__logo`}`}/>
            {adaptive ?
                <BurgerNavMenu topRef={props.refs.topRef} links={links} active={active} handler={clickHandler}
                               navbarFixed={props.fixed} toggleOpened={toggleOpened} opened={opened}/>
                :
                <ul className={'navbar__links'}>
                  {links.map(elem => {
                    if (elem.children)
                      return (
                        <div key={elem.text} className="navbar__link">
                          {elem.text} <Arrow/>
                          <div className="dropdown-content">
                            {elem.children.map(elem =>
                            elem.href ? <NavLink key={elem.text} to={elem.href} className={`partnerShip`}>
                              {elem.logo}
                              {elem.text}
                            </NavLink>
                                :
                                <a key={elem.text} onClick={e => clickHandler(e, elem.ref)}
                                   className={`navbar__link${active === elem.text ? ' active' : ''} partnerShip`}>{elem.logo}{elem.text}</a>
                              )}
                          </div>
                        </div>
                      )
                    return elem.ref ?
                        <a key={elem.text} onClick={e => clickHandler(e, elem.ref)}
                           className={`navbar__link${active === elem.text ? ' active' : ''}`}>{elem.text}</a>
                        :
                        elem.to ?
                            <NavLink key={elem.text} to={elem.to}
                                     className={`navbar__link${active === elem.text ? ' active' : ''}`}>{elem.text}</NavLink>
                            :
                            <a key={elem.text} href={elem.href} target="_blank"
                               className={`navbar__link`}>{elem.text}</a>
                  })}
                </ul>
            }
          </div>
        </div>
      </nav>
  );
}
