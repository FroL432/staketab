import React, { useEffect } from 'react'
import { connect } from 'react-redux'
import { getCardsInfo } from 'store/MainPage/actions'

import './ShowcaseBlock.sass'
import ModeSwitcher from 'component/pageComponents/MainPage/ModeSwitcher'
import StakingBrandCard from 'component/pageComponents/MainPage/StakingBrandCard'

function ShowcaseBlock(props) {

  useEffect(() => {
    props.getCardsInfo('mainnet')
    props.getCardsInfo('testnet')
  }, [])

  return (
    <main className="showcase" id="validators" ref={props.validatorsRef}>
      <div className="container">
        <h4 className="showcase__title">Stake crypto with Staketab</h4>
        <div className="showcase__modeswitcher">
          <ModeSwitcher modeChangeHandler={(val) => {console.log(val)}} options={['mainnet', 'testnet']} />
        </div>
        {props.net === 'mainnet' ?

          props.cardsInfo.mainnetCards.length > 0 ?

          <div className="showcase__row">
            {props.cardsInfo.mainnetCards.map(elem => 
              <div key={Math.floor(Math.random() * 100000)} className="showcase__col">
                <StakingBrandCard
                  icon={elem.img}
                  title={elem.title}
                  fee={elem.val_fee}
                  apy={elem.apr}
                  id={elem.du_address}
                  abbr={elem.ticker}
                  explorerLink={elem.explorer_link_1}
                  discordLink={elem.discord_link}
                />
              </div>
            )}
          </div>

          :

          <p className="showcase__preloader">Loading...</p>

        : 

          props.cardsInfo.testnetCards.length > 0 ?

          <div className="showcase__row">
            {props.cardsInfo.testnetCards.map(elem => 
              <div key={Math.floor(Math.random() * 100000)} className="showcase__col">
                <StakingBrandCard
                  icon={elem.img}
                  title={elem.title}
                  fee={elem.val_fee}
                  apy={elem.apr}
                  id={elem.du_address}
                  abbr={elem.ticker}
                  explorerLink={elem.explorer_link_1}
                  discordLink={elem.discord_link}
                />
              </div>
            )}
          </div>

          :

          <p className="showcase__preloader">Loading...</p>
        }
      </div>
    </main>
  )
}

const mapStateToProps = (state) => {
  return {
    cardsInfo: state.reducerMainPage.cardsInfo,
    net: state.reducerMainPage.net
  }
}

const mapDispatchToProps = {
  getCardsInfo
}

export default connect(mapStateToProps, mapDispatchToProps)(ShowcaseBlock)